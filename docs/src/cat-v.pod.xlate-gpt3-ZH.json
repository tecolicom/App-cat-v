{
   "All control characters can also be accessed by an option with their name. For example, option C<--nl> is defined for the newline character.\n" : "所有控制字符也可以通过其名称的选项访问。例如，为换行符定义了选项 C<--nl>。\n",
   "Also, by default, escape characters are not converted, so decorations by ANSI escape sequences are retained.\n" : "此外，默认情况下，转义字符不会被转换，因此 ANSI 转义序列的修饰保留。\n",
   "At this time, Unicode markings are available for the following characters\n" : "此时，以下字符可用于 Unicode 标记\n",
   "By default, the style C<pin> is applied, which can be changed with C<--tabstyle>. If the C<--tabstyle> option is specified with no arguments, a list of available styles is displayed.\n" : "默认情况下应用样式C<pin>，可以使用C<--tabstyle>更改。如果指定了不带参数的C<--tabstyle>选项，则会显示可用样式列表。\n",
   "Control characters can be displayed in control format and Unicode symbol characters. By default, control characters other than newline and escape characters are displayed as corresponding Unicode symbols.\n" : "控制字符可以以控制格式和 Unicode 符号字符显示。默认情况下，除换行符和转义字符外的控制字符会显示为相应的 Unicode 符号。\n",
   "Disables all character conversions and resets repeat characters.\n" : "禁用所有字符转换并重置重复字符。\n",
   "From CPAN archive:\n" : "来自CPAN存档：\n",
   "From GIT repository:\n" : "来自GIT存储库：\n",
   "Git repository.\n" : "Git存储库。\n",
   "Give the character type and flags as parameters to specify the character to be visualized and the conversion format.\n" : "通过将字符类型和标志作为参数来指定要可视化的字符和转换格式。\n",
   "If C<all> is specified for the name, the value applies to all character types. The following command sets all characters to C<s>, then sets C<nl>, C<nl>, C<np>, and C<sp> to C<m> and disables C<esc>. This is the default state.\n" : "如果为名称指定了 C<all>，则该值适用于所有字符类型。以下命令将所有字符设置为 C<s>，然后将 C<nl>、C<nl>、C<np> 和 C<sp> 设置为 C<m> 并禁用 C<esc>。这是默认状态。\n",
   "If I<name> begins with C<+>, add that character in addition to the existing configuration.\n" : "如果I<name>以C<+>开头，则将该字符添加到现有配置中。\n",
   "If a letter other than an alphabet or a number is given, it will be replaced by that letter.\n" : "如果给出的是字母或数字以外的字母，则将替换为该字母。\n",
   "If a string of two or more characters is given, it is interpreted as a Unicode character name.\n" : "如果给出两个或更多字符的字符串，则将其解释为 Unicode 字符名称。\n",
   "If flag begins with C<+>, that character is added to the repeat list. So\n" : "如果标志以 C<+> 开头，则该字符将添加到重复列表中。因此\n",
   "In such cases, tab expansion can be temporarily enabled by the C<-t> option.\n" : "在这种情况下，可以通过C<-t>选项临时启用制表符展开。\n",
   "Multiple items can be specified at the same time. The following example sets C<tab> and C<bel> to 0 and C<esc> to C<s>.\n" : "可以同时指定多个项目。以下示例将 C<tab> 和 C<bel> 设置为 0，将 C<esc> 设置为 C<s>。\n",
   "Option C<-c nl=1> can also be used to visualize newline characters. For newline characters only, after displaying the result of the conversion, the original character is output at the same time.\n" : "选项 C<-c nl=1> 也可用于可视化换行字符。仅对换行字符，在显示转换结果后，同时输出原始字符。\n",
   "Set head and following space characters. If the option value is longer than single character, it is evaluated as unicode name.\n" : "设置头部和后续空格字符。如果选项值长于单个字符，则将其视为Unicode名称。\n",
   "Set tab width.\n" : "设置制表符宽度。\n",
   "Set the style how tab is expanded. Select C<symbol> or C<shade> for example. If two style names are combined, like C<squat-arrow,middle-dot>, use C<squat-arrow> for tabhead and C<middle-dot> for tabspace.\n" : "设置制表符展开的样式。例如选择C<symbol>或C<shade>。如果两个样式名称组合在一起，比如C<squat-arrow,middle-dot>，则使用C<squat-arrow>作为制表符头部，使用C<middle-dot>作为制表符空格。\n",
   "Show available style list if called without parameter. Styles are defined in L<Text::ANSI::Fold> library.\n" : "如果没有参数调用，则显示可用样式列表。样式在L<Text::ANSI::Fold>库中定义。\n",
   "Sometimes it is desirable to visualize whitespace characters. The C<cat -t> command can visualize tab characters, but the problem is that it breaks the visual format. We may want to see which parts are tabs and which parts are space characters while preserving the format. Extra whitespace characters at the end of a line can also be noticed by visualizing them.\n" : "有时希望可视化空白字符。C<cat -t> 命令可以可视化制表符，但问题在于它会破坏视觉格式。我们可能希望看到哪些部分是制表符，哪些部分是空格字符，同时保留格式。通过可视化可以注意到行尾的额外空白字符。\n",
   "Specifies the character type for outputting the original character at the same time as the converted character. The default setting is C<nl,np>. The following will correctly output the original ANSI sequence with the escape character visualized.\n" : "指定输出原始字符和转换后字符的字符类型。默认设置为C<nl,np>。以下内容将正确输出带有可视化转义字符的原始ANSI序列。\n",
   "Tab characters are expanded by default. To explicitly disable it, use the B<-T> or B<--no-expand> option.\n" : "制表符默认会被展开。要显式禁用它，请使用B<-T>或B<--no-expand>选项。\n",
   "The C<cat -v> command is often used to display characters that cannot be displayed, but is not always suitable for viewing the output of modern applications because it converts all non-ASCII characters.\n" : "C<cat -v> 命令通常用于显示无法显示的字符，但并不总是适合查看现代应用程序的输出，因为它会转换所有非ASCII字符。\n",
   "The C<cat-v> command visualizes whitespace and control characters while preserving the display of displayable graphic characters.\n" : "C<cat-v> 命令可视化空白和控制字符，同时保留可显示图形字符的显示。\n",
   "The predecessor of the C<cat-v> command was originally created as the filter module of the L<App::optex> command.\n" : "C<cat-v>命令的前身最初是L<App::optex>命令的过滤模块。\n",
   "The second field is the default action. C<s> stands for symbol, C<m> for Unicode mark, and C<0> for no conversion.\n" : "第二个字段是默认操作。C<s> 代表符号，C<m> 代表 Unicode 标记，C<0> 代表不转换。\n",
   "To disable, give the value 0.\n" : "要禁用，请给出值 0。\n",
   "Use the names in the list above to specify by character type. If you want to convert escapes without converting tabs, use the following\n" : "使用上面列表中的名称来指定字符类型。如果要转换转义字符而不转换制表符，请使用以下方式\n",
   "Used alone, it activates the visibility of the character.\n" : "单独使用时，它激活字符的可见性。\n",
   "Using C<cat-v>, tab characters are visualized in such a way that the space on the display does not change.\n" : "使用 C<cat-v>，制表符以一种不改变显示空间的方式可视化。\n",
   "You can disable tab expansion by default by putting the following setting in your C<~/.cat-vrc> file.\n" : "您可以通过将以下设置放入您的C<~/.cat-vrc>文件来默认禁用制表符展开。\n",
   "cat-v - visualize non-printing characters\n" : "cat-v - 可视化非打印字符\n",
   "cat-v [ options ] args ...\n" : "cat-v [ 选项 ] 参数 ...\n",
   "will have the same meaning as if you had written:\n" : "将具有与您编写的相同含义：\n"
}
